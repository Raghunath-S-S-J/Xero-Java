/*
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.accounting;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** See Tax Types â€“ can only be used on update calls */
public enum TaxType {

  /** OUTPUT */
  OUTPUT("OUTPUT"),

  /** INPUT */
  INPUT("INPUT"),

  /** CAPEXINPUT */
  CAPEXINPUT("CAPEXINPUT"),

  /** EXEMPTEXPORT */
  EXEMPTEXPORT("EXEMPTEXPORT"),

  /** EXEMPTEXPENSES */
  EXEMPTEXPENSES("EXEMPTEXPENSES"),

  /** EXEMPTCAPITAL */
  EXEMPTCAPITAL("EXEMPTCAPITAL"),

  /** EXEMPTOUTPUT */
  EXEMPTOUTPUT("EXEMPTOUTPUT"),

  /** INPUTTAXED */
  INPUTTAXED("INPUTTAXED"),

  /** BASEXCLUDED */
  BASEXCLUDED("BASEXCLUDED"),

  /** GSTONCAPIMPORTS */
  GSTONCAPIMPORTS("GSTONCAPIMPORTS"),

  /** GSTONIMPORTS */
  GSTONIMPORTS("GSTONIMPORTS"),

  /** NONE */
  NONE("NONE"),

  /** INPUT2 */
  INPUT2("INPUT2"),

  /** ZERORATED */
  ZERORATED("ZERORATED"),

  /** OUTPUT2 */
  OUTPUT2("OUTPUT2"),

  /** CAPEXINPUT2 */
  CAPEXINPUT2("CAPEXINPUT2"),

  /** CAPEXOUTPUT */
  CAPEXOUTPUT("CAPEXOUTPUT"),

  /** CAPEXOUTPUT2 */
  CAPEXOUTPUT2("CAPEXOUTPUT2"),

  /** CAPEXSRINPUT */
  CAPEXSRINPUT("CAPEXSRINPUT"),

  /** CAPEXSROUTPUT */
  CAPEXSROUTPUT("CAPEXSROUTPUT"),

  /** ECACQUISITIONS */
  ECACQUISITIONS("ECACQUISITIONS"),

  /** ECZRINPUT */
  ECZRINPUT("ECZRINPUT"),

  /** ECZROUTPUT */
  ECZROUTPUT("ECZROUTPUT"),

  /** ECZROUTPUTSERVICES */
  ECZROUTPUTSERVICES("ECZROUTPUTSERVICES"),

  /** EXEMPTINPUT */
  EXEMPTINPUT("EXEMPTINPUT"),

  /** REVERSECHARGES */
  REVERSECHARGES("REVERSECHARGES"),

  /** RRINPUT */
  RRINPUT("RRINPUT"),

  /** RROUTPUT */
  RROUTPUT("RROUTPUT"),

  /** SRINPUT */
  SRINPUT("SRINPUT"),

  /** SROUTPUT */
  SROUTPUT("SROUTPUT"),

  /** ZERORATEDINPUT */
  ZERORATEDINPUT("ZERORATEDINPUT"),

  /** ZERORATEDOUTPUT */
  ZERORATEDOUTPUT("ZERORATEDOUTPUT"),

  /** BLINPUT */
  BLINPUT("BLINPUT"),

  /** DSOUTPUT */
  DSOUTPUT("DSOUTPUT"),

  /** EPINPUT */
  EPINPUT("EPINPUT"),

  /** ES33OUTPUT */
  ES33OUTPUT("ES33OUTPUT"),

  /** ESN33OUTPUT */
  ESN33OUTPUT("ESN33OUTPUT"),

  /** IGDSINPUT2 */
  IGDSINPUT2("IGDSINPUT2"),

  /** IMINPUT2 */
  IMINPUT2("IMINPUT2"),

  /** MEINPUT */
  MEINPUT("MEINPUT"),

  /** NRINPUT */
  NRINPUT("NRINPUT"),

  /** OPINPUT */
  OPINPUT("OPINPUT"),

  /** OSOUTPUT */
  OSOUTPUT("OSOUTPUT"),

  /** TXESSINPUT */
  TXESSINPUT("TXESSINPUT"),

  /** TXN33INPUT */
  TXN33INPUT("TXN33INPUT"),

  /** TXPETINPUT */
  TXPETINPUT("TXPETINPUT"),

  /** TXREINPUT */
  TXREINPUT("TXREINPUT"),

  /** INPUT3 */
  INPUT3("INPUT3"),

  /** INPUT4 */
  INPUT4("INPUT4"),

  /** OUTPUT3 */
  OUTPUT3("OUTPUT3"),

  /** OUTPUT4 */
  OUTPUT4("OUTPUT4"),

  /** SROUTPUT2 */
  SROUTPUT2("SROUTPUT2"),

  /** TXCA */
  TXCA("TXCA"),

  /** SRCAS */
  SRCAS("SRCAS"),

  /** BLINPUT2 */
  BLINPUT2("BLINPUT2"),

  /** DRCHARGESUPPLY20 */
  DRCHARGESUPPLY20("DRCHARGESUPPLY20"),

  /** DRCHARGE20 */
  DRCHARGE20("DRCHARGE20"),

  /** DRCHARGESUPPLY5 */
  DRCHARGESUPPLY5("DRCHARGESUPPLY5"),

  /** DRCHARGE5 */
  DRCHARGE5("DRCHARGE5"),

  /** BADDEBTRELIEF */
  BADDEBTRELIEF("BADDEBTRELIEF"),

  /** IGDSINPUT3 */
  IGDSINPUT3("IGDSINPUT3"),

  /** SROVR */
  SROVR("SROVR"),

  /** TOURISTREFUND */
  TOURISTREFUND("TOURISTREFUND"),

  /** TXRCN33INPUT */
  TXRCN33INPUT("TXRCN33INPUT"),

  /** TXRCREINPUT */
  TXRCREINPUT("TXRCREINPUT"),

  /** TXRCESSINPUT */
  TXRCESSINPUT("TXRCESSINPUT"),

  /** TXRCTSINPUT */
  TXRCTSINPUT("TXRCTSINPUT"),

  /** OUTPUTY23 */
  OUTPUTY23("OUTPUTY23"),

  /** DSOUTPUTY23 */
  DSOUTPUTY23("DSOUTPUTY23"),

  /** INPUTY23 */
  INPUTY23("INPUTY23"),

  /** IMINPUT2Y23 */
  IMINPUT2Y23("IMINPUT2Y23"),

  /** IGDSINPUT2Y23 */
  IGDSINPUT2Y23("IGDSINPUT2Y23"),

  /** TXPETINPUTY23 */
  TXPETINPUTY23("TXPETINPUTY23"),

  /** TXESSINPUTY23 */
  TXESSINPUTY23("TXESSINPUTY23"),

  /** TXN33INPUTY23 */
  TXN33INPUTY23("TXN33INPUTY23"),

  /** TXREINPUTY23 */
  TXREINPUTY23("TXREINPUTY23"),

  /** TXCAY23 */
  TXCAY23("TXCAY23"),

  /** BADDEBTRELIEFY23 */
  BADDEBTRELIEFY23("BADDEBTRELIEFY23"),

  /** IGDSINPUT3Y23 */
  IGDSINPUT3Y23("IGDSINPUT3Y23"),

  /** SROVRRSY23 */
  SROVRRSY23("SROVRRSY23"),

  /** SROVRLVGY23 */
  SROVRLVGY23("SROVRLVGY23"),

  /** SRLVGY23 */
  SRLVGY23("SRLVGY23");

  private String value;

  TaxType(String value) {
    this.value = value;
  }

  /** @return String value */
  @JsonValue
  public String getValue() {
    return value;
  }

  /**
   * toString
   *
   * @return String value
   */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * fromValue
   *
   * @param value String
   */
  @JsonCreator
  public static TaxType fromValue(String value) {
    for (TaxType b : TaxType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}
